name: Deploy GaiaExchanges

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  verify-secrets:
    runs-on: ubuntu-latest
    name: Verify Deployment Secrets
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Verify required secrets
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
        ADMIN_EMAILS: ${{ secrets.ADMIN_EMAILS }}
        ADMIN_USER_IDS: ${{ secrets.ADMIN_USER_IDS }}
        ADMIN_ROLES: ${{ secrets.ADMIN_ROLES }}
      run: npm run verify-secrets

  build-test-deploy:
    runs-on: ubuntu-latest
    needs: verify-secrets
    
    outputs:
      deployment-url: ${{ steps.vercel-deployment.outputs.preview-url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting (non-blocking)
      run: |
        echo "Running ESLint checks..."
        npm run lint || echo "⚠️ Linting warnings detected but continuing deployment"
        echo "Linting check completed"
      
    - name: Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      id: vercel-deployment
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    - name: Wait for deployment propagation
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 45  # Extended wait time for production deployment
        
    - name: Comprehensive deployment verification
      run: |
        echo "Running comprehensive deployment verification..."
        bash scripts/verify-deployment.sh "${{ steps.vercel-deployment.outputs.preview-url }}"
        
    - name: Store deployment URL
      run: |
        echo "DEPLOYMENT_URL=${{ steps.vercel-deployment.outputs.preview-url }}" >> $GITHUB_ENV
        echo "Deployment completed successfully!"
        echo "🚀 Application URL: ${{ steps.vercel-deployment.outputs.preview-url }}"
        
  notify-success:
    runs-on: ubuntu-latest
    needs: build-test-deploy
    if: success()
    
    steps:
    - name: Checkout repository (for notification scripts)
      uses: actions/checkout@v4
    
    - name: Notify Slack on Success
      if: always() && vars.SLACK_NOTIFICATIONS_ENABLED == 'true'
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: |
          🎉 **GaiaExchanges deployment successful!** 🎉
          
          **Deployment Details:**
          • Environment: Production
          • Commit: `${{ github.sha }}`
          • Branch: `${{ github.ref_name }}`
          • Actor: ${{ github.actor }}
          • URL: ${{ needs.build-test-deploy.outputs.deployment-url }}
          
          **Next Steps:**
          • Verify application functionality
          • Monitor for any issues
          • Check performance metrics
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Notify Discord on Success
      if: always() && vars.DISCORD_NOTIFICATIONS_ENABLED == 'true'
      uses: Ilshidur/action-discord@master
      with:
        args: |
          🎉 **GaiaExchanges Deployment Successful** 🎉
          
          **Details:**
          • Environment: Production  
          • Commit: ${{ github.sha }}
          • Branch: ${{ github.ref_name }}
          • Actor: ${{ github.actor }}
          • URL: ${{ needs.build-test-deploy.outputs.deployment-url }}
          
          All health checks passed! ✅
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}

  notify-failure:
    runs-on: ubuntu-latest
    needs: [verify-secrets, build-test-deploy]
    if: failure()
    
    steps:
    - name: Checkout repository (for notification scripts)
      uses: actions/checkout@v4
    
    - name: Determine failure stage
      id: failure-stage
      run: |
        if [ "${{ needs.verify-secrets.result }}" = "failure" ]; then
          echo "FAILURE_STAGE=secrets-verification" >> $GITHUB_OUTPUT
          echo "FAILURE_MESSAGE=Required deployment secrets are missing or invalid" >> $GITHUB_OUTPUT
        elif [ "${{ needs.build-test-deploy.result }}" = "failure" ]; then
          echo "FAILURE_STAGE=build-deployment" >> $GITHUB_OUTPUT
          echo "FAILURE_MESSAGE=Build, deployment, or verification failed" >> $GITHUB_OUTPUT
        else
          echo "FAILURE_STAGE=unknown" >> $GITHUB_OUTPUT
          echo "FAILURE_MESSAGE=Unknown failure occurred during deployment" >> $GITHUB_OUTPUT
        fi
    
    - name: Notify Slack on Failure
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: |
          🚨 **GaiaExchanges deployment failed!** 🚨
          
          **Failure Details:**
          • Stage: ${{ steps.failure-stage.outputs.FAILURE_STAGE }}
          • Issue: ${{ steps.failure-stage.outputs.FAILURE_MESSAGE }}
          • Workflow: ${{ github.workflow }}
          • Commit: `${{ github.sha }}`
          • Branch: `${{ github.ref_name }}`
          • Actor: ${{ github.actor }}
          
          **Action Required:**
          • Check GitHub Actions logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          • Review recent changes for issues
          • Verify all required secrets are configured
          • Consider rolling back if needed
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Notify Discord on Failure
      if: always()
      uses: Ilshidur/action-discord@master
      with:
        args: |
          🚨 **GaiaExchanges Deployment Failed** 🚨
          
          **Failure Details:**
          • Stage: ${{ steps.failure-stage.outputs.FAILURE_STAGE }}
          • Issue: ${{ steps.failure-stage.outputs.FAILURE_MESSAGE }}
          • Workflow: ${{ github.workflow }}
          • Commit: ${{ github.sha }}
          • Branch: ${{ github.ref_name }}
          • Actor: ${{ github.actor }}
          
          **Actions Log:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          @here Please investigate and resolve! 🔧
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        
    - name: Send Email Notification on Failure
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: '🚨 GaiaExchanges Deployment Failed - Immediate Action Required'
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: ${{ secrets.EMAIL_USERNAME }}
        html_body: |
          <h2>🚨 GaiaExchanges Deployment Failed</h2>
          
          <p>A critical deployment failure has occurred that requires immediate attention.</p>
          
          <h3>📋 Failure Details</h3>
          <ul>
            <li><strong>Stage:</strong> ${{ steps.failure-stage.outputs.FAILURE_STAGE }}</li>
            <li><strong>Issue:</strong> ${{ steps.failure-stage.outputs.FAILURE_MESSAGE }}</li>
            <li><strong>Workflow:</strong> ${{ github.workflow }}</li>
            <li><strong>Repository:</strong> ${{ github.repository }}</li>
            <li><strong>Commit:</strong> <code>${{ github.sha }}</code></li>
            <li><strong>Branch:</strong> ${{ github.ref_name }}</li>
            <li><strong>Triggered by:</strong> ${{ github.actor }}</li>
            <li><strong>Timestamp:</strong> ${{ github.event.head_commit.timestamp }}</li>
          </ul>
          
          <h3>🔧 Required Actions</h3>
          <ol>
            <li><strong>Investigate:</strong> <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View GitHub Actions logs</a></li>
            <li><strong>Review:</strong> Check recent code changes for potential issues</li>
            <li><strong>Verify:</strong> Ensure all deployment secrets are properly configured</li>
            <li><strong>Test:</strong> Run local build verification if needed</li>
            <li><strong>Rollback:</strong> Consider reverting to last known good deployment</li>
          </ol>
          
          <h3>📞 Support</h3>
          <p>If you need assistance:</p>
          <ul>
            <li>Check the <a href="${{ github.server_url }}/${{ github.repository }}/blob/main/DEPLOYMENT_AUTOMATION.md">deployment documentation</a></li>
            <li>Review the <a href="${{ github.server_url }}/${{ github.repository }}/blob/main/SECRETS_SETUP.md">secrets setup guide</a></li>
            <li>Contact the development team for urgent issues</li>
          </ul>
          
          <p><em>This is an automated notification from the GaiaExchanges CI/CD pipeline.</em></p>