name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - id: nodefile
        run: |
          if [ -f .nvmrc ]; then
            echo "file=.nvmrc" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node from .nvmrc
        if: steps.nodefile.outputs.file
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup Node 20 (fallback)
        if: "!steps.nodefile.outputs.file"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - id: pkg
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Enable Corepack (for yarn/pnpm)
        run: corepack enable || true

      - name: Install dependencies (pnpm)
        if: steps.pkg.outputs.manager == 'pnpm'
        run: pnpm install --frozen-lockfile

      - name: Install dependencies (yarn)
        if: steps.pkg.outputs.manager == 'yarn'
        run: yarn install --frozen-lockfile

      - name: Install dependencies (npm)
        if: steps.pkg.outputs.manager == 'npm'
        run: npm ci

      - name: ESLint
        run: |
          if npx --yes eslint -v >/dev/null 2>&1; then
            npx --yes eslint .
          elif npm run | grep -q "^ *lint"; then
            ${{ steps.pkg.outputs.manager }} run lint
          else
            echo "No ESLint config or script found; skipping."
          fi

  typecheck:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - id: nodefile
        run: |
          if [ -f .nvmrc ]; then
            echo "file=.nvmrc" >> $GITHUB_OUTPUT
          fi
      - name: Setup Node from .nvmrc
        if: steps.nodefile.outputs.file
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Setup Node 20 (fallback)
        if: "!steps.nodefile.outputs.file"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - id: pkg
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Enable Corepack (for yarn/pnpm)
        run: corepack enable || true

      - name: Install dependencies (pnpm)
        if: steps.pkg.outputs.manager == 'pnpm'
        run: pnpm install --frozen-lockfile
      - name: Install dependencies (yarn)
        if: steps.pkg.outputs.manager == 'yarn'
        run: yarn install --frozen-lockfile
      - name: Install dependencies (npm)
        if: steps.pkg.outputs.manager == 'npm'
        run: npm ci

      - name: TypeScript type-check
        run: |
          if npx --yes tsc -v >/dev/null 2>&1 || [ -f tsconfig.json ]; then
            npx --yes tsc --noEmit || ${{ steps.pkg.outputs.manager }} run -s typecheck || echo "Type-check script missing; ensure TS passes locally."
          else
            echo "No TypeScript config; skipping type-check."
          fi

  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - id: nodefile
        run: |
          if [ -f .nvmrc ]; then
            echo "file=.nvmrc" >> $GITHUB_OUTPUT
          fi
      - name: Setup Node from .nvmrc
        if: steps.nodefile.outputs.file
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Setup Node 20 (fallback)
        if: "!steps.nodefile.outputs.file"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - id: pkg
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Enable Corepack (for yarn/pnpm)
        run: corepack enable || true

      - name: Install dependencies (pnpm)
        if: steps.pkg.outputs.manager == 'pnpm'
        run: pnpm install --frozen-lockfile
      - name: Install dependencies (yarn)
        if: steps.pkg.outputs.manager == 'yarn'
        run: yarn install --frozen-lockfile
      - name: Install dependencies (npm)
        if: steps.pkg.outputs.manager == 'npm'
        run: npm ci

      - name: Build
        run: |
          if npm run | grep -q "^ *build"; then
            ${{ steps.pkg.outputs.manager }} run build
          else
            echo "No build script; skipping."
          fi

  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - id: nodefile
        run: |
          if [ -f .nvmrc ]; then
            echo "file=.nvmrc" >> $GITHUB_OUTPUT
          fi
      - name: Setup Node from .nvmrc
        if: steps.nodefile.outputs.file
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - name: Setup Node 20 (fallback)
        if: "!steps.nodefile.outputs.file"
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - id: pkg
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Enable Corepack (for yarn/pnpm)
        run: corepack enable || true

      - name: Install dependencies (pnpm)
        if: steps.pkg.outputs.manager == 'pnpm'
        run: pnpm install --frozen-lockfile
      - name: Install dependencies (yarn)
        if: steps.pkg.outputs.manager == 'yarn'
        run: yarn install --frozen-lockfile
      - name: Install dependencies (npm)
        if: steps.pkg.outputs.manager == 'npm'
        run: npm ci

      - name: Run tests
        run: |
          if npm run | grep -q "^ *test"; then
            ${{ steps.pkg.outputs.manager }} test --if-present
          else
            echo "No test script; skipping."
          fi