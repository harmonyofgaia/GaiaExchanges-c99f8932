name: CI & Deploy

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if configured)
        run: npm run test --if-present
        continue-on-error: true

      - name: Build
        env:
          # Provide dummy envs for PRs to avoid secret access. Real secrets only on push to main in deploy job.
          VITE_SUPABASE_URL: ${{ github.event_name == 'pull_request' && 'https://placeholder.supabase.co' || '' }}
          VITE_SUPABASE_ANON_KEY: ${{ github.event_name == 'pull_request' && 'test-anon-key' || '' }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            npm run build:dev
          else
            npm run build
          fi

      - name: Upload build artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error

  deploy_vercel:
    name: Deploy to Vercel (main only)
    needs: build_and_test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Check Vercel secrets
        id: check_secrets
        run: |
          if [[ -z "${{ secrets.VERCEL_TOKEN }}" || -z "${{ secrets.VERCEL_PROJECT_ID }}" || -z "${{ secrets.VERCEL_ORG_ID }}" ]]; then
            echo "Missing Vercel secrets. Skipping deployment."
            echo "deploy=false" >> $GITHUB_OUTPUT
          else
            echo "Vercel secrets available. Proceeding with deployment."
            echo "deploy=true" >> $GITHUB_OUTPUT
          fi

      - name: Download build artifact
        if: steps.check_secrets.outputs.deploy == 'true'
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install Vercel CLI
        if: steps.check_secrets.outputs.deploy == 'true'
        run: npm install -g vercel@latest

      - name: Prepare Vercel project
        if: steps.check_secrets.outputs.deploy == 'true'
        run: |
          mkdir -p .vercel
          cat > .vercel/project.json <<EOF
          {
            "projectId": "$VERCEL_PROJECT_ID",
            "orgId": "$VERCEL_ORG_ID"
          }
          EOF
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

      - name: Sync Vercel settings
        if: steps.check_secrets.outputs.deploy == 'true'
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (prod)
        if: steps.check_secrets.outputs.deploy == 'true'
        run: vercel deploy dist --prod --yes --token "$VERCEL_TOKEN"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deployment skipped
        if: steps.check_secrets.outputs.deploy == 'false'
        run: |
          echo "⚠️  Vercel deployment skipped due to missing secrets:"
          echo "   - VERCEL_TOKEN"
          echo "   - VERCEL_PROJECT_ID" 
          echo "   - VERCEL_ORG_ID"
          echo "Please configure these secrets in your repository settings."
