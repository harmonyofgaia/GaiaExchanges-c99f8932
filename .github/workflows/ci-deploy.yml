name: CI & Deploy

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if configured)
        run: npm run test --if-present
        continue-on-error: true

      - name: Build
        env:
          # Provide dummy envs for PRs to avoid secret access. Real secrets only on push to main in deploy job.
          VITE_SUPABASE_URL: ${{ github.event_name == 'pull_request' && 'https://placeholder.supabase.co' || '' }}
          VITE_SUPABASE_ANON_KEY: ${{ github.event_name == 'pull_request' && 'test-anon-key' || '' }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            npm run build:dev
          else
            npm run build
          fi

      - name: Upload build artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error

  deploy_netlify:
    name: Deploy to Netlify (main only)
    needs: build_and_test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check Netlify secrets
        id: check_secrets
        run: |
          if [[ -z "${{ secrets.NETLIFY_AUTH_TOKEN }}" || -z "${{ secrets.NETLIFY_SITE_ID }}" ]]; then
            echo "Missing Netlify secrets. Skipping deployment."
            echo "deploy=false" >> $GITHUB_OUTPUT
          else
            echo "Netlify secrets available. Proceeding with deployment."
            echo "deploy=true" >> $GITHUB_OUTPUT
          fi

      - name: Download build artifact
        if: steps.check_secrets.outputs.deploy == 'true'
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install Netlify CLI
        if: steps.check_secrets.outputs.deploy == 'true'
        run: npm install -g netlify-cli@latest

      - name: Deploy to Netlify
        if: steps.check_secrets.outputs.deploy == 'true'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy --prod --dir=dist

      - name: Deployment skipped
        if: steps.check_secrets.outputs.deploy == 'false'
        run: |
          echo "⚠️  Netlify deployment skipped due to missing secrets:"
          echo "   - NETLIFY_AUTH_TOKEN"
          echo "   - NETLIFY_SITE_ID"
          echo "Please configure these secrets in your repository settings."
